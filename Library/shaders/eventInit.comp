/*   
    Copyright (c) 2024 Patryk Cieslak. All rights reserved.

    This file is a part of Stonefish.

    Stonefish is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    Stonefish is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <https://www.gnu.org/licenses/>.
*/

#version 430

layout(local_size_x = 16, local_size_y = 16, local_size_z = 1) in;

layout(rgba32f) uniform image2D currColor; // Current color image (in)
layout(r32f) uniform image2D logLum; // Logarithm luminance image (out)
layout(r32i) uniform iimage2D eventTimes; // Event times (out)
layout(r32f) uniform image2D crossings; // Crossings history (out)

#define RGB_TO_LUM  vec3(0.2125, 0.7154, 0.0721)
#define LOG_EPS     0.001

void main()
{
    ivec2 inDim = imageSize(currColor).xy;

    if(gl_GlobalInvocationID.x < inDim.x && gl_GlobalInvocationID.y < inDim.y)
    {
        ivec2 coord;
        coord.x = int(gl_GlobalInvocationID.x);
        coord.y = int(gl_GlobalInvocationID.y);
        ivec2 colorCoord;
        colorCoord.x = int(gl_GlobalInvocationID.x);
        colorCoord.y = inDim.y - int(gl_GlobalInvocationID.y) - 1;

        // Compute logarithm luminance of current image
        vec3 color = imageLoad(currColor, colorCoord).rgb; 
        float itdt = log(LOG_EPS + dot(color, RGB_TO_LUM));
        imageStore(logLum, coord, vec4(itdt)); // Save computed logarithm luminance image

        // Initialize event detection
        imageStore(eventTimes, coord, ivec4(0));
        imageStore(crossings, coord, vec4(itdt)); // Initialize crossings with the luminance
    }
}